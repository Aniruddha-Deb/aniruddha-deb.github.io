<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Aniruddha Deb - Posts</title><link href="https://aniruddhadeb.com/" rel="alternate"></link><link href="https://aniruddhadeb.com/feeds/posts.atom.xml" rel="self"></link><id>https://aniruddhadeb.com/</id><updated>2023-06-09T23:51:00+05:30</updated><entry><title>[Encrypted] Testing Encrypted Posts</title><link href="https://aniruddhadeb.com/articles/2023/testing-encrypted-posts.html" rel="alternate"></link><published>2023-06-09T23:51:00+05:30</published><updated>2023-06-09T23:51:00+05:30</updated><author><name>Aniruddha Deb</name></author><id>tag:aniruddhadeb.com,2023-06-09:/articles/2023/testing-encrypted-posts.html</id><summary type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;HK57YkSO0u/0BYddNB+EWg==;O1FHW8Xl0lJ8M2JHVpPGTehAZQ9SPZ7vZFxyFH00tzqm7yk3+dQ/jpv4QmRkIVKZzM+7WZioP8TnI9gvGLusY7HiD4tgs1xGVsMa2+9jevKXKQ5UIy3NZraLx2hp/EdHQQaDD2CqlN+U1MQDS79gIiJjqAVoZX7BtEr/v/H+F+UMz6RqAbgdBAfsgJmrsxNDYqq/4gi05x7YAObsn5P6AVpKzWGYD5uQilJPOpYrCLDQSkLRRMbcnlQH9abpa7Eo5P8Fy/i89kKcU/pgDz0LjHMhED9TJ7X4nXst2mxZKIM=;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i - 1] !== padding_char) {
                    return …&lt;/script&gt;</summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;HK57YkSO0u/0BYddNB+EWg==;O1FHW8Xl0lJ8M2JHVpPGTehAZQ9SPZ7vZFxyFH00tzqm7yk3+dQ/jpv4QmRkIVKZzM+7WZioP8TnI9gvGLusY7HiD4tgs1xGVsMa2+9jevKXKQ5UIy3NZraLx2hp/EdHQQaDD2CqlN+U1MQDS79gIiJjqAVoZX7BtEr/v/H+F+UMz6RqAbgdBAfsgJmrsxNDYqq/4gi05x7YAObsn5P6AVpKzWGYD5uQilJPOpYrCLDQSkLRRMbcnlQH9abpa7Eo5P8Fy/i89kKcU/pgDz0LjHMhED9TJ7X4nXst2mxZKIM=;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i - 1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, { iv: iv, padding: CryptoJS.pad.NoPadding });

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };


        document.addEventListener('DOMContentLoaded', function () {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            var decrypt_document = function (event) {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
                event.preventDefault();
                return false;
            }
            
            decrypt_btn.addEventListener('click', decrypt_document);
            decrypt_form.addEventListener('submit', decrypt_document);
        });
    })();
&lt;/script&gt;</content><category term="Posts"></category><category term="test"></category></entry><entry><title>Testing</title><link href="https://aniruddhadeb.com/articles/2020/subdir-test.html" rel="alternate"></link><published>2020-07-13T03:44:00+05:30</published><updated>2020-07-13T03:44:00+05:30</updated><author><name>Aniruddha Deb</name></author><id>tag:aniruddhadeb.com,2020-07-13:/articles/2020/subdir-test.html</id><summary type="html">&lt;p&gt;This is a scratchpad of sorts to test the capabilities of Pelican.&lt;/p&gt;
&lt;p&gt;Let's start with an Image:
&lt;img alt="Test Image" src="https://aniruddhadeb.com/articles/2020/res/test_post/big_buck_bunny.png"&gt;
Big buck bunny looking real handsome ;) Some tweaks have to be made to expand 
the image on click but this is ok for now..&lt;/p&gt;
&lt;p&gt;Let's try headings!&lt;/p&gt;
&lt;h1&gt;Echo&lt;/h1&gt;
&lt;h2&gt;Echo&lt;/h2&gt;
&lt;h3&gt;Echo&lt;/h3&gt;
&lt;h4&gt;Echo&lt;/h4&gt;
&lt;h5&gt;Echo&lt;/h5&gt;
&lt;h6&gt;Echo …&lt;/h6&gt;</summary><content type="html">&lt;p&gt;This is a scratchpad of sorts to test the capabilities of Pelican.&lt;/p&gt;
&lt;p&gt;Let's start with an Image:
&lt;img alt="Test Image" src="https://aniruddhadeb.com/articles/2020/res/test_post/big_buck_bunny.png"&gt;
Big buck bunny looking real handsome ;) Some tweaks have to be made to expand 
the image on click but this is ok for now..&lt;/p&gt;
&lt;p&gt;Let's try headings!&lt;/p&gt;
&lt;h1&gt;Echo&lt;/h1&gt;
&lt;h2&gt;Echo&lt;/h2&gt;
&lt;h3&gt;Echo&lt;/h3&gt;
&lt;h4&gt;Echo&lt;/h4&gt;
&lt;h5&gt;Echo&lt;/h5&gt;
&lt;h6&gt;Echo&lt;/h6&gt;
&lt;p&gt;looking good, although I will personally never use anything lower than H4 (if 
you're nesting these many headings, you should just go write a book).&lt;/p&gt;
&lt;p&gt;Lists looking fine as well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This&lt;/li&gt;
&lt;li&gt;is &lt;/li&gt;
&lt;li&gt;an &lt;/li&gt;
&lt;li&gt;unordered&lt;/li&gt;
&lt;li&gt;list&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ordered list:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Law&lt;/li&gt;
&lt;li&gt;And&lt;/li&gt;
&lt;li&gt;Order&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Tables (top 10 chess players as of 19th July 2020):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;No&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Country&lt;/th&gt;
&lt;th&gt;Rating&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Magnus Carlsen&lt;/td&gt;
&lt;td&gt;NOR&lt;/td&gt;
&lt;td&gt;2863&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Fabiano Caruana&lt;/td&gt;
&lt;td&gt;USA&lt;/td&gt;
&lt;td&gt;2835&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Liren Ding&lt;/td&gt;
&lt;td&gt;CHN&lt;/td&gt;
&lt;td&gt;2791&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Ian Nepomniachtchi&lt;/td&gt;
&lt;td&gt;RUS&lt;/td&gt;
&lt;td&gt;2784&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Maxime Vachier-Lagrave&lt;/td&gt;
&lt;td&gt;FRA&lt;/td&gt;
&lt;td&gt;2778&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Alexander Grischuk&lt;/td&gt;
&lt;td&gt;RUS&lt;/td&gt;
&lt;td&gt;2777&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Levon Aronian&lt;/td&gt;
&lt;td&gt;ARM&lt;/td&gt;
&lt;td&gt;2773&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Wesley So&lt;/td&gt;
&lt;td&gt;USA&lt;/td&gt;
&lt;td&gt;2770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Teimour Radjabov&lt;/td&gt;
&lt;td&gt;AZE&lt;/td&gt;
&lt;td&gt;2765&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Anish Giri&lt;/td&gt;
&lt;td&gt;NED&lt;/td&gt;
&lt;td&gt;2764&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Some MathJax, and a quote/hyperlink example (this is taken from 
&lt;a href="https://math.stackexchange.com/questions/3761395/will-t12-x-substitution-work-for-this-integral/3761410#3761410"&gt;Math SE&lt;/a&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;let $x = t^{12} \implies dx = 12t^{11} dt$
$$A = \int \left( \frac{1}{t^4+t^3} + \frac{\ln(1+t^2)}{t^4 + t^6} \right) 12t^{11}dt \ 
= \underbrace{\int \frac{12t^8}{t+1}dt}_{A_1} + \underbrace{\int \frac{\ln(1+t^2)}{1+t^2}12t^7dt}_{A_2} $$
$A_1$ can be written as:
$$A_1 = 12 \int \frac{x^8 - 1 + 1}{x+1} dx= 12 \int (x^4+1)(x^2+1)(x-1) + \frac{1}{x+1}dx$$
Which is doable. For $A_2$, make the substitution $1+t^2 = k \implies 2tdt = dk$
$$A_2 = 6 \int \frac{\ln(k)}{k}(k-1)^3dk$$
This can be integrated by parts as follows:
$$A_2 = 6\left( \ln(k) \cdot \left( \frac{k^3}{3} - \frac{3k^2}{2} + 3k - \ln(k)\right) + \int \frac 1k \cdot \left( \frac{k^3}{3} - \frac{3k^2}{2} + 3k - \ln(k)\right) dk\right)$$
$A_2$ is also now doable. Add $A_1$ and $A_2$ to get $A$ and substitute back till you get $A = f(x) + c$.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here's an example of some embedded HTML: (using the &lt;a href="chess.com"&gt;chess.com&lt;/a&gt; 
chess player to show one of my games)&lt;/p&gt;
&lt;iframe id="6878876" allowtransparency="true" frameborder="0" style="width:760px;height:480px;margin:auto;display:block;border:none;" src="//www.chess.com/emboard?id=6878876"&gt;&lt;/iframe&gt;
&lt;script type="text/javascript"&gt;window.addEventListener("message",e=&gt;{e['data']&amp;&amp;"6878876"===e['data']['id']&amp;&amp;document.getElementById(\`${e['data']['id']}\`)&amp;&amp;(document.getElementById(\`${e['data']['id']}\`).style.height=\`${e['data']['frameHeight']+60}px\`)});&lt;/script&gt;

&lt;p&gt;Here's some code to generate a minefield (Taken from the &lt;a href="https://github.com/Aniruddha-Deb/Mines/blob/master/src/com/sensei/mines/core/MinefieldGenerator.java"&gt;Mines&lt;/a&gt; repo):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prefs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getRows&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prefs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getCols&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;numMines&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prefs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMines&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;numMines&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;boolean&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xLoc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;yLoc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;yDiff&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;yLoc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xDiff&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xLoc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kt"&gt;boolean&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;putable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yDiff&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xDiff&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;yLoc&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;xLoc&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasMine&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;putable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;yLoc&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;xLoc&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setMine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasMine&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;padAround&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buttons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Everything looks in place! Looking forward to writing some great content here.
Next post: How I migrated from Blogger to github-pages.&lt;/p&gt;</content><category term="Posts"></category></entry><entry><title>MathJax Test</title><link href="https://aniruddhadeb.com/articles/2020/mathjax-test.html" rel="alternate"></link><published>2020-04-29T10:20:00+05:30</published><updated>2020-04-29T10:20:00+05:30</updated><author><name>Aniruddha Deb</name></author><id>tag:aniruddhadeb.com,2020-04-29:/articles/2020/mathjax-test.html</id><summary type="html">&lt;p&gt;This is a test to see if MathJax works on blogger.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For \(\alpha, \beta \gt -1\), find the value of \(\lim_{n \to \infty} n^{\beta - \alpha} \frac{1^\alpha + 2^\alpha + 3^\alpha + ... + n^\alpha}{1^\beta + 2^\beta + 3^\beta + ... + n^\beta}\)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So we have&lt;/p&gt;
&lt;p&gt;$$L = \lim_{n …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is a test to see if MathJax works on blogger.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For \(\alpha, \beta \gt -1\), find the value of \(\lim_{n \to \infty} n^{\beta - \alpha} \frac{1^\alpha + 2^\alpha + 3^\alpha + ... + n^\alpha}{1^\beta + 2^\beta + 3^\beta + ... + n^\beta}\)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So we have&lt;/p&gt;
&lt;p&gt;$$L = \lim_{n \to \infty} \frac{n^\beta}{n^\alpha} \times \frac{\sum_{r=0}^n r^\alpha}{\sum_{r=0}^n r^\beta}\
= \lim_{n \to \infty} \frac{\sum_{r=0}^n (\frac rn)^\alpha}{\sum_{r=0}^n (\frac rn)^\beta}$$&lt;/p&gt;
&lt;p&gt;The summations can now be evaluated as Riemann sums by multiplying numerator and denominator by (\frac 1n)&lt;/p&gt;
&lt;p&gt;$$L = \frac{\int_0^1 x^\alpha dx}{\int_0^1 x^\beta dx}\
L = \frac{\beta+1}{\alpha +1}$$&lt;/p&gt;
&lt;p&gt;Indeed it does! Looking forward to writing more mathematical posts.&lt;/p&gt;</content><category term="Posts"></category></entry></feed>